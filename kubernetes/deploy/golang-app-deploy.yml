apiVersion: apps/v1  # Kubernetes API 版本
kind: Deployment  # Kubernetes 对象类型，Deployment 负责管理 Pod 的生命周期
metadata:
  name: golang-app-deployment  # Deployment 的名字
  labels: # 标签，用于 Kubernetes 识别相关联的资源
    app: golang-app
spec:
  replicas: 3  # 应用实例（Pod）数量
  selector:
    matchLabels: # 选择器，指定哪些 Pod 属于这个 Deployment
      app: golang-app
  template: # Pod 的模板
    metadata:
      labels: # Pod 的标签
        app: golang-app
    spec:
      containers: # Pod 中的容器配置
        - name: golang-app  # 容器名称
          image: myusername/my-golang-app:latest  # 容器使用的镜像
          ports:
            - containerPort: 8080  # 容器开放的端口
---
apiVersion: v1  # Kubernetes API 版本
kind: Service  # Kubernetes 对象类型，Service 用于提供访问 Deployment 的入口
metadata:
  name: golang-app-service  # Service 的名字
spec:
  selector: # 指定这个 Service 负责路由流量到哪些 Pod
    app: golang-app
  ports:
    - protocol: TCP  # 使用的协议
      port: 4000  # Service 的端口
      targetPort: 8080  # Pod 的端口
  type: LoadBalancer  # Service 类型，LoadBalancer 类型的 Service 会有一个外部 IP 地址，用于接收外部流量
